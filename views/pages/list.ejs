<!DOCTYPE html>
<html lang="en">
<head>
  <% include ../partials/head.ejs %>
  <title>To-Do Item List</title>
</head>
<body>
<h1>To-Do Item List</h1>
<% include ../partials/nav.ejs %>
<h2>Enter Date Range</h2>
<p>All items that have their beginning-to-end-date-span overlap at least partially with the selected date range will be shown.</p>
<p>Dates should be given in the format <span class="dateFormat">YYYY-MM-DD</span> (four-digit year, two-digit month, and two-digit day of the month) to be interpreted correctly.</p>
<label for="fromDate">From Date: </label>
<input type="text" name="fromDate" id="fromDate" size="10">
<!--
<input type="number" name="fromYear" id="fromYear" required>
<input type="number" name="fromMonth" id="fromMonth" required>
-->
<br/>
<label for="toDate">To Date: </label>
<input type="text" name="toDate" id="toDate" size="10">
<br/>
<input type="button" name="submitDateRange" id="submitDateRange" value="Display To-Do List" onclick="getToDoList(fromDate.value, toDate.value)">

<!--
<form id="selectId" method="post">
<p>Or enter the ID of the to-do item.</p>
<label for="toDoId">ID: </label>
<input type="number" name="toDoId" id="toDoId">
<br/>
<input type="submit" name="submit" id="buttonItemId" value="Display To-Do Item">
</form>
-->

<h2>To-Do Items</h2>
<div id="toDoListResults">
<p class="statusMessage">Select a date range above to view to-do items.</p>
</div>

<script>
/*function retrieveToDoItemId (selectedId) {
    console.log(selectedId)
}*/

    function getToDoItem (id) {
        var xmlHttp = new XMLHttpRequest()
        xmlHttp.onreadystatechange = function() {
            console.log("Function reached")
            if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {
                console.log("readyState and status reached")
                console.log(xmlHttp.responseText)
                //var jsonData = JSON.parse(xmlHttp.responseText)
                //console.log(jsonData)
                document.getElementById("toDoListResults").innerHTML = xmlHttp.responseText // jsonData
            }
        }

        var query = '/toDoId?id=' + id

        xmlHttp.open("GET", query, true)
        xmlHttp.send(null)
    }

    function getToDoList (fromDate, toDate) {
        const xmlHttp = new XMLHttpRequest()
        xmlHttp.onreadystatechange = function() {
            console.log("List function reached")
            if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {
                const ids = JSON.parse(xmlHttp.responseText)
				console.log(xmlHttp.responseText)
				if (ids.length === 0) {
					document.getElementById("toDoListResults").innerHTML = '<p class="statusMessage">No results to display.</p>'
				}
				else {
					var fullListHtml = '<ol class="toDoList">'
					for (var i = 0; i < ids.length; ++i) {
						fullListHtml += '<li><input type="button" value="Edit" onclick="linkToEditItem(' + ids[i]["id"] + ')" id="' + ids[i]["id"] + '"> <input type="button" value="Delete" onclick="deleteToDoItem(' + ids[i]["id"] + ', \'' + ids[i]["thing_to_do"] + '\')" id="' + ids[i]["id"] + '"> <ul class="toDoDetails"> <li><strong>To Do:</strong> ' + ids[i]["thing_to_do"] + ' <li><strong>Start Date:</strong> ' + ids[i]["date_to_start"] + '</li> <li><strong>End Date:</strong> ' + ids[i]["date_to_be_done"] + '</li> <li><strong>Notes:</strong> ' + ids[i]["notes"] + '</li></ul></li>'
					}
					fullListHtml += "</ol>"
					document.getElementById("toDoListResults").innerHTML = fullListHtml
				}
            }
        }

        const query = '/toDoDateSpan?date_to_start=' + fromDate + '&date_to_be_done=' + toDate

        xmlHttp.open("GET", query, true)
        xmlHttp.send(null)
    }
	
	function linkToEditItem (toDoId) {
		location.href="editItem?id=" + toDoId
	}

	function deleteToDoItem (toDoId, taskName) {
		var success = false
        const xmlHttp = new XMLHttpRequest()
        xmlHttp.onreadystatechange = function() {
            console.log("Delete function reached")
            if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {
                //const ids = JSON.parse(xmlHttp.responseText)
				console.log(xmlHttp.responseText)
				document.getElementById("toDoListResults").innerHTML = "<p class='successMessage'>Successfully deleted to-do item: &quot;" + taskName + "&quot;</p>"
				success = true
            }
        }
		if (success === false) {
			document.getElementById("toDoListResults").innerHTML = "<p class='errorMessage'>Failed to delete to-do item &quot;" + taskName + "&quot;</p>"
		}

        const query = '/deleteItem?id=' + toDoId

        xmlHttp.open("GET", query, true)
        xmlHttp.send(null)
	}
</script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
/*$("#selectId").submit(function(e) {
    e.preventDefault()
	var data = { id: toDoId }
	console.log(data)
	$.get('/toDoId', data, function (res) {
		console.log(res)
	}
})*/
</script>
</body>
</html>